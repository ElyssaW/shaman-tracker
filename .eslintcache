[{"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\index.js":"1","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\App.js":"2","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\Shaman.js":"3","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\LandingPage.js":"4","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\BasicInfo.js":"5","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\SpiritList.js":"6","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\SpiritSelect.js":"7","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Spirit.js":"8","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Spells.js":"9","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\SpellLevel.js":"10","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\SpiritAbilities.js":"11","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\SpiritMagic.js":"12","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Spell.js":"13","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Ability.js":"14","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\New\\NewShaman.js":"15","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\reportWebVitals.js":"16","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\HexSelectList.js":"17","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\SpiritData.js":"18","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexSelect.js":"19","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexDesc.js":"20","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\HexData.js":"21","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\HexDisplayList.js":"22","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Load\\ShamanList.js":"23"},{"size":502,"mtime":1616958114668,"results":"24","hashOfConfig":"25"},{"size":4813,"mtime":1617036165223,"results":"26","hashOfConfig":"25"},{"size":3219,"mtime":1617035492218,"results":"27","hashOfConfig":"25"},{"size":657,"mtime":1617036124758,"results":"28","hashOfConfig":"25"},{"size":1611,"mtime":1616957169582,"results":"29","hashOfConfig":"25"},{"size":478,"mtime":1616980862151,"results":"30","hashOfConfig":"25"},{"size":280,"mtime":1616957122707,"results":"31","hashOfConfig":"25"},{"size":687,"mtime":1616957098048,"results":"32","hashOfConfig":"25"},{"size":305,"mtime":1616957081072,"results":"33","hashOfConfig":"25"},{"size":303,"mtime":1616958405394,"results":"34","hashOfConfig":"25"},{"size":986,"mtime":1616958405394,"results":"35","hashOfConfig":"25"},{"size":398,"mtime":1616958405394,"results":"36","hashOfConfig":"25"},{"size":318,"mtime":1616957075015,"results":"37","hashOfConfig":"25"},{"size":284,"mtime":1616957049754,"results":"38","hashOfConfig":"25"},{"size":3502,"mtime":1617035669820,"results":"39","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"25"},{"size":597,"mtime":1616980809490,"results":"41","hashOfConfig":"25"},{"size":122238,"mtime":1616980723939,"results":"42","hashOfConfig":"25"},{"size":301,"mtime":1616980454073,"results":"43","hashOfConfig":"25"},{"size":329,"mtime":1616980524750,"results":"44","hashOfConfig":"25"},{"size":8842,"mtime":1616980681412,"results":"45","hashOfConfig":"25"},{"size":524,"mtime":1616980815041,"results":"46","hashOfConfig":"25"},{"size":640,"mtime":1617051283842,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1q4rdkp",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\index.js",[],["100","101"],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\App.js",["102"],"import './App.css';\r\nimport data from './Data/SpiritData.js'\r\nimport HexData from './Data/HexData.js'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport React, { Component, useEffect } from 'react'\r\nimport LandingPage from './LandingPage'\r\nimport Shaman from './Shaman/Shaman.js'\r\nimport NewShaman from './New/NewShaman';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n      shamans: {},\r\n      currentShaman: {}\r\n        // shaman: {\r\n        //   name: 'New Shaman',\r\n        //   lvl: 1,\r\n        //   str: 10,\r\n        //   dex: 10,\r\n        //   con: 10,\r\n        //   wis: 10,\r\n        //   int: 10,\r\n        //   cha: 10,\r\n        \r\n        //   // Base spirit\r\n        //   spirit: null,\r\n        //   // Wandering spirit\r\n        //   wandSpirit: null,\r\n      \r\n        //   // Hexes the shaman currently has\r\n        //   hexes: [],\r\n        //   // Wandering hexes the shaman currently has\r\n        //   wandHexes: [],\r\n        //   // Hexes the shaman could select from\r\n        //   selectableHexes: [...HexData]\r\n        // }\r\n      }\r\n\r\n      componentDidMount() {\r\n        if (localStorage.getItem('shamans')) {\r\n          this.setState({\r\n            shamans: JSON.parse(localStorage.getItem('shamans'))\r\n          })\r\n        }\r\n      }\r\n\r\n      setCurrentShaman = (shaman) => {\r\n        this.setState({\r\n          currentShaman : {...this.state.currentShaman, ...shaman}\r\n        })\r\n      }\r\n\r\n      updateCurrentShamanToStorage = (shaman) => {\r\n        let tempShamans = this.state.shamans\r\n        tempShamans[shaman.id] = shaman\r\n        localStorage.setItem('shamans', JSON.stringify(tempShamans))\r\n      }\r\n    \r\n      setSpirit = (spirit) => {\r\n        let tempHexes = [...HexData]\r\n        tempHexes = this.state.currentShaman.selectableHexes.concat(spirit.hex)\r\n        tempHexes = this.state.currentShaman.wandSpirit ? this.state.currentShaman.selectableHexes.concat(this.state.currentShaman.wandSpirit.hex) : tempHexes\r\n    \r\n        this.setState({\r\n          shaman: {...this.state.currentShaman, spirit, selectableHexes: tempHexes }\r\n        })\r\n      }\r\n    \r\n      setWandSpirit = (spirit) => {\r\n        let tempHexes = [...HexData]\r\n        tempHexes = this.state.currentShaman.selectableHexes.concat(spirit.hex)\r\n        tempHexes = this.state.currentShaman.selectableHexes.concat(this.state.currentShaman.spirit.hex)\r\n    \r\n        this.setState({\r\n          shaman: {...this.state.currentShaman, wandSpirit: spirit, selectableHexes: tempHexes, wandHexes: [] }\r\n        })\r\n      }\r\n    \r\n      setHex = (hex) => {\r\n        if (this.state.currentShaman.hexes.length < Math.floor(this.state.currentShaman.lvl / 2) && !this.state.currentShaman.hexes.includes(hex)) {\r\n          let tempHexes = [this.state.currentShaman.hexes]\r\n          tempHexes.push(hex)\r\n      \r\n          this.setState({\r\n            shaman: { ...this.state.currentShaman, hexes: tempHexes }\r\n          })\r\n        }\r\n      }\r\n    \r\n      setWandHex = (hex) => {\r\n        if ((this.state.wandHexes.length === 0 || (this.state.lvl > 13 && this.state.wandHexes.length < 2)) && !this.state.hexes.includes(hex)) {\r\n          let tempHexes = [this.state.currentShaman.wandHexes]\r\n          tempHexes.push(hex)\r\n      \r\n          this.setState({\r\n            shaman: { ...this.state.currentShaman, wandHexes: tempHexes }\r\n          })\r\n        }\r\n      }\r\n\r\n    render () {\r\n        return (\r\n            <div className='container'>\r\n                < Router >\r\n                    < Route exact path='/' render={()=>{\r\n                     return (< LandingPage\r\n                        shamans={this.state.shamans}\r\n                     />\r\n                     )}} />\r\n                    < Route exact path='/new' render={(props)=>{\r\n                        return (\r\n                          < NewShaman \r\n                            setCurrentShaman={this.setCurrentShaman}\r\n                            shaman={this.state.currentShaman}\r\n                            shamans={this.state.shamans}\r\n                            HexData={HexData}\r\n                          />\r\n                        )\r\n                      }} />\r\n                    < Route exact path='/shaman' render={(props)=> { \r\n                        return (\r\n                          < Shaman\r\n                            data={data}\r\n                            shaman={this.state.currentShaman}\r\n                            setSpirit={this.setSpirit}\r\n                            setWandSpirit={this.setWandSpirit}\r\n                            setHex={this.setHex}\r\n                            setWandHex={this.setWandHex}\r\n                          />\r\n                        )\r\n                    }} />\r\n                </ Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\Shaman.js",["103","104","105","106"],"import React, { Component } from 'react'\nimport Spirit from '../Spirit/Spirit.js'\nimport BasicInfo from './BasicInfo.js'\nimport Spells from '../Spells/Spells.js'\nimport spirit from '../Data/SpiritData.js';\nimport SpiritList from '../Spirit/SpiritList.js'\nimport HexSelectList from '../Hexes/Lists/HexSelectList.js'\nimport HexDisplayList from '../Hexes/Lists/HexDisplayList.js'\n\nclass Shaman extends Component {\n\n  state = {\n    currentTab: 'spirit'\n  }\n\n  render () {\n\n    let display \n    {\n      switch(this.state.currentTab) {\n      case 'spirit':\n        display = (\n          <>\n          <div className='spirit-div'>\n            <h2>Select Spirit</h2>\n            < SpiritList setSpirit={this.props.setSpirit} spirits={Object.values(this.props.data)} />\n          </div>\n\n          <div className='spirit-div'>\n            < Spirit spirit={this.props.shaman.spirit} />\n          </div>\n          </>\n        )\n        break;\n      case 'wand':\n        display = (\n          <>\n            <div className='wandering-div'>\n              <h2>Select Wandering Spirit</h2>\n              < SpiritList setSpirit={this.props.setWandSpirit} spirits={Object.values(this.props.data)} />\n            </div>\n\n            <div className='spirit-div'>\n              < Spirit spirit={this.props.shaman.wandSpirit} />\n            </div>\n          </>\n        )\n        break;\n      case 'hex':\n        display = (\n          <>\n          <div className='hex-list-div'>\n            <h2>Available Base Hexes</h2>\n            < HexSelectList setHex={this.props.setHex} hexes={this.props.shaman.baseHexes} />\n          </div>\n\n          <div className='hex-list-div'>\n            <h2>Available Spirit Hexes</h2>\n            < HexSelectList setHex={this.props.setHex} hexes={this.props.shaman.spiritHexes} />\n          </div>\n\n          <div className='hex-list-div'>\n            <h2>Available Wandering Spirit Hexes</h2>\n            < HexSelectList setHex={this.props.setWandHex} hexes={this.props.shaman.wandSpiritHexes} />\n          </div>\n          </>\n        )\n        break;\n\n      default:\n        display = (\n          <p>Select a spirit and some hexes to build your shaman!</p>\n        )\n        break;\n      }\n    }\n\n    return (\n      <div className='shaman-main'>\n        <div className='shaman-info'>\n        < BasicInfo shaman={this.props.shaman} />\n\n        <div className='current-hex-list-div'>\n          <h2>Shaman's Hexes</h2>\n          {/* < HexDisplayList \n            hexes={this.props.shaman.hexes}\n          /> */}\n          </div>\n        </div>\n\n        <div className='shaman-select'>\n          <ul className='selection-toggle'>\n            <li className='select-button one' onClick={()=>{this.setState({ currentTab: 'info' })}}>Info</li>\n            <li className='select-button two' onClick={()=>{this.setState({ currentTab: 'spirit' })}}>Spirit</li>\n            <li className='select-button three' onClick={()=>{this.setState({ currentTab: 'wand' })}}>Wandering Spirit</li>\n            <li className='select-button four' onClick={()=>{this.setState({ currentTab: 'hex' })}}>Hexes</li>\n            < hr />\n          </ul>\n\n          {display}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Shaman\n","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\LandingPage.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\BasicInfo.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\SpiritList.js",["107"],"import React, { Component } from 'react'\r\nimport spirit from './Data'\r\nimport SpiritSelect from './SpiritSelect'\r\n\r\nclass SpiritList extends Component {\r\n    render () {\r\n\r\n        let buttonBank = this.props.spirits.map(item => {\r\n            return < SpiritSelect spirit={item} setSpirit={this.props.setSpirit} />\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                {buttonBank}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SpiritList","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\SpiritSelect.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Spirit.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Spells.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\SpellLevel.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\SpiritAbilities.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\SpiritMagic.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Spell.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Ability.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\New\\NewShaman.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\reportWebVitals.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\HexSelectList.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\SpiritData.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexSelect.js",["108"],"import { CONNREFUSED } from 'dns';\r\nimport React, { Component } from 'react'\r\n\r\nclass HexSelect extends Component {\r\n    render () {\r\n        return (\r\n            <button onClick={()=>{this.props.setHex(this.props.hex)}}>{this.props.hex.name}</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HexSelect","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexDesc.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\HexData.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\HexDisplayList.js",["109"],"import React, { Component } from 'react'\r\nimport HexDesc from '../Components/HexDesc.js'\r\nimport HexSelect from '../Components/HexSelect.js'\r\n\r\nclass HexList extends Component {\r\n    render () {\r\n\r\n        let list = this.props.hexes.map(hex => {\r\n            return (\r\n                <div>\r\n                    < HexDesc hex={hex} />\r\n                </div>\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <div>\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HexList","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Load\\ShamanList.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":5,"column":28,"nodeType":"116","messageId":"117","endLine":5,"endColumn":37},{"ruleId":"114","severity":1,"message":"118","line":4,"column":8,"nodeType":"116","messageId":"117","endLine":4,"endColumn":14},{"ruleId":"114","severity":1,"message":"119","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":14},{"ruleId":"114","severity":1,"message":"120","line":8,"column":8,"nodeType":"116","messageId":"117","endLine":8,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":19,"column":5,"nodeType":"123","messageId":"124","endLine":76,"endColumn":6},{"ruleId":"114","severity":1,"message":"119","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"114","severity":1,"message":"125","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":21},{"ruleId":"114","severity":1,"message":"126","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":17},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Spells' is defined but never used.","'spirit' is defined but never used.","'HexDisplayList' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'CONNREFUSED' is defined but never used.","'HexSelect' is defined but never used.","no-global-assign","no-unsafe-negation"]