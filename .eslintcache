[{"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\index.js":"1","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\App.js":"2","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\Shaman.js":"3","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\BasicInfo.js":"4","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\New\\NewShaman.js":"5","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\reportWebVitals.js":"6","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\HexSelectList.js":"7","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\SpiritData.js":"8","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexSelect.js":"9","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexDesc.js":"10","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\HexData.js":"11","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\HexDisplayList.js":"12","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\SlimHexSelectList.js":"13","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexName.js":"14","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\SlimHexDisplayList.js":"15","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\LandingPage\\LandingPage.js":"16","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\LandingPage\\Load\\ShamanList.js":"17","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\InfoExpand.js":"18","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Types\\FullSpell.js":"19","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Lists\\SpellsFull.js":"20","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Components\\SpellEffects.js":"21","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Components\\SpellName.js":"22","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Components\\SpellTrait.js":"23","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\ShamanSpells.js":"24","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\SpellSection.js":"25","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\ShamanSpellIDs.js":"26","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Lists\\SpellsSlim.js":"27","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Types\\SlimSpell.js":"28","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\New\\Components\\Stat.js":"29","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Rules.js":"30","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\Section.js":"31","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\TItle.js":"32","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\Subtitle.js":"33","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\Subsection.js":"34","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\Contents.js":"35","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Types\\Toggle.js":"36","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\Toggle.js":"37","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\Spirit.js":"38","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Lists\\SlimSpiritList.js":"39","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\SpiritAbilities.js":"40","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\SpiritMagic.js":"41","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\Ability.js":"42","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\SpiritSelect.js":"43","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Lists\\FullSpiritList.js":"44","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\Tab.js":"45"},{"size":502,"mtime":1616958114668,"results":"46","hashOfConfig":"47"},{"size":17837,"mtime":1619028171844,"results":"48","hashOfConfig":"47"},{"size":3842,"mtime":1619377533349,"results":"49","hashOfConfig":"47"},{"size":1641,"mtime":1617589631363,"results":"50","hashOfConfig":"47"},{"size":5759,"mtime":1617896978887,"results":"51","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"52","hashOfConfig":"47"},{"size":806,"mtime":1619026887809,"results":"53","hashOfConfig":"47"},{"size":376272,"mtime":1617589631358,"results":"54","hashOfConfig":"47"},{"size":336,"mtime":1618867483511,"results":"55","hashOfConfig":"47"},{"size":397,"mtime":1619031100290,"results":"56","hashOfConfig":"47"},{"size":8775,"mtime":1617589631311,"results":"57","hashOfConfig":"47"},{"size":877,"mtime":1618867398932,"results":"58","hashOfConfig":"47"},{"size":563,"mtime":1617216150744,"results":"59","hashOfConfig":"47"},{"size":240,"mtime":1616980496374,"results":"60","hashOfConfig":"47"},{"size":582,"mtime":1617589631359,"results":"61","hashOfConfig":"47"},{"size":1184,"mtime":1617909616198,"results":"62","hashOfConfig":"47"},{"size":1085,"mtime":1617937344994,"results":"63","hashOfConfig":"47"},{"size":1243,"mtime":1618851301583,"results":"64","hashOfConfig":"47"},{"size":1930,"mtime":1619030839293,"results":"65","hashOfConfig":"47"},{"size":959,"mtime":1619030768922,"results":"66","hashOfConfig":"47"},{"size":612,"mtime":1617589631365,"results":"67","hashOfConfig":"47"},{"size":236,"mtime":1617589631366,"results":"68","hashOfConfig":"47"},{"size":313,"mtime":1617589631367,"results":"69","hashOfConfig":"47"},{"size":879523,"mtime":1617589631320,"results":"70","hashOfConfig":"47"},{"size":2100,"mtime":1619034146835,"results":"71","hashOfConfig":"47"},{"size":2787,"mtime":1617574004709,"results":"72","hashOfConfig":"47"},{"size":686,"mtime":1617589631369,"results":"73","hashOfConfig":"47"},{"size":376,"mtime":1617589631371,"results":"74","hashOfConfig":"47"},{"size":786,"mtime":1617844410818,"results":"75","hashOfConfig":"47"},{"size":16609,"mtime":1617931643690,"results":"76","hashOfConfig":"47"},{"size":859,"mtime":1617931045900,"results":"77","hashOfConfig":"47"},{"size":239,"mtime":1617909397268,"results":"78","hashOfConfig":"47"},{"size":205,"mtime":1617909444603,"results":"79","hashOfConfig":"47"},{"size":239,"mtime":1617909683729,"results":"80","hashOfConfig":"47"},{"size":438,"mtime":1617931801497,"results":"81","hashOfConfig":"47"},{"size":725,"mtime":1618801795260,"results":"82","hashOfConfig":"47"},{"size":1286,"mtime":1619378674365,"results":"83","hashOfConfig":"47"},{"size":687,"mtime":1618851267900,"results":"84","hashOfConfig":"47"},{"size":449,"mtime":1618851793355,"results":"85","hashOfConfig":"47"},{"size":986,"mtime":1618851186698,"results":"86","hashOfConfig":"47"},{"size":366,"mtime":1618851424611,"results":"87","hashOfConfig":"47"},{"size":305,"mtime":1619030864301,"results":"88","hashOfConfig":"47"},{"size":303,"mtime":1619377750678,"results":"89","hashOfConfig":"47"},{"size":863,"mtime":1619377707614,"results":"90","hashOfConfig":"47"},{"size":753,"mtime":1619028864076,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1q4rdkp",{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\index.js",[],["191","192"],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\App.js",["193","194","195","196","197","198"],"import './App.css';\r\nimport data from './Data/SpiritData.js'\r\nimport HexData from './Data/HexData.js'\r\nimport ShamanSpellData from './Data/ShamanSpells.js'\r\n// import AllSpellData from './Data/SpellData.js'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport React, { Component, useEffect } from 'react'\r\nimport LandingPage from './LandingPage/LandingPage'\r\nimport Shaman from './Shaman/Shaman.js'\r\nimport NewShaman from './New/NewShaman';\r\nimport Rules from './Rules/Rules.js'\r\n\r\nconst AllSpellData = [[], [], [], [], [], [], [], [], [], []]\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n      // Collection of user shamans, compressed and retrieved from local storage\r\n      shamans: {},\r\n\r\n      // Shaman that the user is currently viewing/updating.\r\n      currentShaman: {\r\n          name: 'New Shaman',\r\n          lvl: 1,\r\n          str: 10,\r\n          dex: 10,\r\n          con: 10,\r\n          wis: 10,\r\n          int: 10,\r\n          cha: 10,\r\n        \r\n          // Base spirit\r\n          spirit: null,\r\n          // Wandering spirit\r\n          wandSpirit: null,\r\n      \r\n          // Hexes the shaman currently has\r\n          baseHexes: [],\r\n          baseHexIDs: [],\r\n          // Spirit hexes the shaman currently has\r\n          spiritHexes: [],\r\n          spiritHexIDs: [],\r\n          // Wandering hexes the shaman currently has\r\n          wandHexes: [],\r\n          wandHexIDs: [],\r\n          // Hexes the shaman could select from\r\n          selectableBaseHexes: [...HexData],\r\n          selectableSpiritHexes: [],\r\n          selectableWandHexes: [],\r\n\r\n          spellsPerDay: [],\r\n          spells: [[], [], [], [], [], [], [], [], [], []],\r\n          spellIds: [[], [], [], [], [], [], [], [], [], []],\r\n\r\n          bab: 0,\r\n          fort: 0,\r\n          will: 0,\r\n          reflex: 0\r\n        }\r\n      }\r\n\r\n      // -------------------- LIFE CYCLE METHOD FOR INITIAL LOAD-IN ----------------------- //\r\n\r\n      componentDidMount() {\r\n        if (localStorage.getItem('shamans')) {\r\n          this.setState({\r\n            shamans: JSON.parse(localStorage.getItem('shamans'))\r\n          })\r\n          console.log(localStorage.getItem('shamans'))\r\n        }\r\n      }\r\n\r\n      // -------------------- HELPER FUNCTIONS FOR LOAD ----------------------- //\r\n\r\n      buildSpirit = (spiritId) => {\r\n        return data[spiritId]\r\n      }\r\n\r\n      buildSelectableHexes = (data, currentHexes) => {\r\n        return data.filter(hex => {\r\n          if (!currentHexes.includes(hex)) {\r\n            return hex\r\n          }\r\n        }) \r\n      }\r\n\r\n      buildCurrentHexes = (selectableHexes, currentHexIDs) => {\r\n        return selectableHexes.filter(hex => {\r\n          return currentHexIDs.includes(hex.id)\r\n        })\r\n      }\r\n\r\n      buildSaves = (shaman) => {\r\n        shaman.bab = Math.floor(shaman.lvl * .75)\r\n        shaman.will = Math.floor(shaman.lvl / 2) + 2 + shaman.wis\r\n        shaman.fort = Math.floor(shaman.lvl * .33) + shaman.con\r\n        shaman.reflex = Math.floor(shaman.lvl * .33) + shaman.dex\r\n\r\n        return shaman\r\n      }\r\n\r\n      buildSpellsPerDay = (shaman) => {\r\n        console.log('Building spells per day')\r\n        const spellsPerDayDict = {\r\n          1: [3, 1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n          2: [4, 2, 0, 0, 0, 0, 0, 0, 0, 0],\r\n          3: [4, 2, 1, 0, 0, 0, 0, 0, 0, 0],\r\n          4: [4, 3, 2, 0, 0, 0, 0, 0, 0, 0],\r\n          5: [4, 3, 2, 1, 0, 0, 0, 0, 0, 0],\r\n          6: [4, 3, 3, 2, 0, 0, 0, 0, 0, 0],\r\n          7: [4, 4, 3, 2, 1, 0, 0, 0, 0, 0],\r\n          8: [4, 4, 3, 3, 2, 0, 0, 0, 0, 0],\r\n          9: [4, 4, 4, 3, 2, 1, 0, 0, 0, 0],\r\n          10: [4, 4, 4, 3, 3, 2, 0, 0, 0, 0],\r\n          11: [4, 4, 4, 4, 3, 2, 1, 0, 0, 0],\r\n          12: [4, 4, 4, 4, 3, 3, 2, 0, 0, 0],\r\n          13: [4, 4, 4, 4, 4, 3, 2, 1, 0, 0],\r\n          14: [4, 4, 4, 4, 4, 3, 3, 2, 0, 0],\r\n          15: [4, 4, 4, 4, 4, 4, 3, 2, 1, 0],\r\n          16: [4, 4, 4, 4, 4, 4, 3, 3, 2, 0],\r\n          17: [4, 4, 4, 4, 0, 4, 4, 3, 2, 1],\r\n          18: [4, 4, 4, 4, 0, 4, 4, 3, 3, 2],\r\n          19: [4, 4, 4, 4, 0, 4, 4, 4, 3, 3],\r\n          20: [4, 4, 4, 4, 0, 4, 4, 4, 4, 4]\r\n        }\r\n\r\n        const BonusSpellsDict = {\r\n          10: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n          12: [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n          14: [1, 1, 0, 0, 0, 0, 0, 0, 0, 0],\r\n          16: [1, 1, 1, 0, 0, 0, 0, 0, 0, 0],\r\n          18: [1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\r\n          20: [2, 1, 1, 1, 1, 0, 0, 0, 0, 0],\r\n          22: [2, 2, 1, 1, 1, 1, 0, 0, 0, 0],\r\n          24: [2, 2, 2, 1, 1, 1, 1, 0, 0, 0],\r\n          26: [2, 2, 2, 2, 1, 1, 1, 1, 0, 0],\r\n          28: [3, 2, 2, 2, 2, 1, 1, 1, 1, 0],\r\n          30: [3, 3, 2, 2, 2, 2, 1, 1, 1, 1],\r\n          32: [3, 3, 3, 2, 2, 2, 2, 1, 1, 1],\r\n          34: [3, 3, 3, 3, 2, 2, 2, 2, 1, 1],\r\n          36: [4, 3, 3, 3, 3, 2, 2, 2, 2, 1],\r\n          38: [4, 4, 3, 3, 3, 3, 2, 2, 2, 2],\r\n          40: [4, 4, 4, 3, 3, 3, 3, 2, 2, 2],\r\n          42: [4, 4, 4, 4, 3, 3, 3, 3, 2, 2],\r\n          44: [5, 4, 4, 4, 4, 3, 3, 3, 3, 2]\r\n        }\r\n\r\n        return spellsPerDayDict[shaman.lvl].map((spellsPerDay, i) => {\r\n          if (spellsPerDay === 0) {\r\n            return 0\r\n          } else if (shaman.wis > 44) {\r\n            return spellsPerDay + BonusSpellsDict[44][i]\r\n          } else if (shaman.wis % 2 === 1) {\r\n            return spellsPerDay + BonusSpellsDict[shaman.wis-1][i]\r\n          } else {\r\n            return spellsPerDay + BonusSpellsDict[shaman.wis][i]\r\n          }\r\n        })\r\n      }\r\n\r\n      buildCurrentSpells = (spellIDs) => {\r\n        return spellIDs.map((level, i) => {\r\n          if (level) {\r\n            return level.map(spellId => {\r\n              return ShamanSpellData[i][spellId]\r\n            })\r\n          } else {\r\n            return []\r\n          }\r\n        })\r\n      }\r\n\r\n      // -------------------- LOAD ----------------------- //\r\n\r\n      retrieveShamansFromStorage = () => {\r\n        return JSON.parse(localStorage.getItem('shamans'))\r\n      }\r\n\r\n      loadShaman = (shaman) => {\r\n        shaman.spirit = shaman.spiritId ? this.buildSpirit(shaman.spiritId) : null\r\n        shaman.wandSpirit = shaman.wandSpiritId ? this.buildSpirit(shaman.wandSpiritId) : null\r\n\r\n        shaman.baseHexes = this.buildCurrentHexes(HexData, shaman.baseHexIDs)\r\n        shaman.spiritHexes = shaman.spirit ? this.buildCurrentHexes(shaman.spirit.hex, shaman.spiritHexIDs) : []\r\n        shaman.wandHexes = shaman.wandSpirit ? this.buildCurrentHexes(shaman.wandSpirit.hex, shaman.wandHexIDs) : []\r\n        \r\n        shaman.selectableBaseHexes = this.buildSelectableHexes(HexData, shaman.baseHexes)\r\n        shaman.selectableSpiritHexes = shaman.spirit ? this.buildSelectableHexes(shaman.spirit.hex, shaman.spiritHexes) : []\r\n        shaman.selectableWandHexes = shaman.wandSpirit ? this.buildSelectableHexes(shaman.wandSpirit.hex, shaman.wandHexes) : []\r\n\r\n        shaman.spellsPerDay = this.buildSpellsPerDay(shaman)\r\n        shaman.spells = this.buildCurrentSpells(shaman.spellIDs)\r\n\r\n        console.log('Loading...')\r\n        this.updateStateShaman(shaman)\r\n      }\r\n\r\n      // -------------------- HELPER FUNCTIONS FOR UPDATE ----------------------- //\r\n\r\n      convertHexesToIDs = (hexes) => {\r\n        return hexes.map(hex => {\r\n          return hex.id\r\n        })\r\n      }\r\n\r\n      compressShamanForStorage = (shaman) => {\r\n        return {\r\n          id: shaman.id,\r\n          lvl: shaman.lvl,\r\n          name: shaman.name,\r\n          str: shaman.str,\r\n          dex: shaman.dex,\r\n          con: shaman.con,\r\n          int: shaman.int,\r\n          wis: shaman.wis,\r\n          cha: shaman.cha,\r\n\r\n          spiritId: shaman.spirit ? shaman.spirit.id : null,\r\n          wandSpiritId: shaman.wandSpirit ? shaman.wandSpirit.id : null,\r\n\r\n          baseHexIDs: shaman.baseHexes ? this.convertHexesToIDs(shaman.baseHexes) : [],\r\n          spiritHexIDs: shaman.spiritHexes ? this.convertHexesToIDs(shaman.spiritHexes) : [],\r\n          wandHexIDs: shaman.wandHexes ? this.convertHexesToIDs(shaman.wandHexes) : [],\r\n\r\n          spellIDs: shaman.spellIDs ? shaman.spellIDs : [[], [], [], [], [], [], [], [], [], []]\r\n        }\r\n      }\r\n\r\n      // -------------------- UPDATE ----------------------- //\r\n\r\n      saveShamansToStorage = (shamans) => {\r\n        localStorage.setItem('shamans', JSON.stringify(shamans))\r\n      }\r\n\r\n      updateShamansToState = (shamans) => {\r\n        this.setState({ shamans: { ...shamans }})\r\n      }\r\n\r\n      updateStorageShaman = (shaman) => {\r\n        let tempShamans = {}\r\n        if(localStorage.getItem('shamans')) {\r\n          tempShamans = this.retrieveShamansFromStorage()\r\n        }\r\n\r\n        tempShamans[shaman.id] = this.compressShamanForStorage(shaman)\r\n        this.saveShamansToStorage(tempShamans)\r\n      }\r\n\r\n      updateStateShaman = (shaman) => {\r\n        this.setState({\r\n          currentShaman: { ...this.state.currentShaman, ...shaman }\r\n        })\r\n      }\r\n\r\n      // -------------------- DELETE ----------------------- //\r\n\r\n      deleteShaman = (shaman) => {\r\n        let tempShamans = this.retrieveShamansFromStorage()\r\n        delete tempShamans[shaman.id]\r\n        this.saveShamansToStorage(tempShamans)\r\n        this.updateShamansToState(tempShamans)\r\n      }\r\n\r\n      // -------------------- CHANGE SPIRIT ----------------------- //\r\n\r\n      setSpirit = (spirit) => {\r\n        let tempShaman = this.state.currentShaman\r\n\r\n        tempShaman.spirit = spirit\r\n        tempShaman.spiritId = spirit.id\r\n        tempShaman.spiritHexes = []\r\n        tempShaman.selectableSpiritHexes = this.buildSelectableHexes(spirit.hex, tempShaman.spiritHexes)\r\n\r\n        this.updateStateShaman(tempShaman)\r\n        this.updateStorageShaman(tempShaman)\r\n      }\r\n\r\n      setWandSpirit = (spirit) => {\r\n        let tempShaman = this.state.currentShaman\r\n\r\n        tempShaman.wandSpirit = spirit\r\n        tempShaman.wandSpiritId = spirit.id\r\n        tempShaman.wandHexes = []\r\n        tempShaman.selectableWandHexes = this.buildSelectableHexes(spirit.hex, tempShaman.wandHexes)\r\n\r\n        this.updateStateShaman(tempShaman)\r\n        this.updateStorageShaman(tempShaman)\r\n      }\r\n\r\n      // -------------------- CHANGE HEX ----------------------- //\r\n\r\n      checkHexLevel = (shaman) => {\r\n        return (shaman.baseHexes.length + shaman.spiritHexes.length) < Math.floor(shaman.lvl / 2)\r\n      }\r\n\r\n      checkWandHexLevel = (shaman) => {\r\n        return (shaman.wandHexes.length === 0 || (shaman.lvl > 13 && shaman.wandHexes.length < 2))\r\n      }\r\n\r\n      setBaseHex = (hex) => {\r\n        let tempShaman = this.state.currentShaman\r\n\r\n        if (this.checkHexLevel(tempShaman)) {\r\n          tempShaman.baseHexes.push(hex)\r\n          tempShaman.baseHexIDs.push(hex.id)\r\n          tempShaman.selectableBaseHexes = this.buildSelectableHexes(HexData, tempShaman.baseHexes)\r\n\r\n          this.updateStateShaman(tempShaman)\r\n          this.updateStorageShaman(tempShaman)\r\n        }\r\n      }\r\n\r\n      setSpiritHex = (hex) => {\r\n        let tempShaman = this.state.currentShaman\r\n\r\n        if (this.checkHexLevel(tempShaman)) {\r\n          tempShaman.spiritHexes.push(hex)\r\n          tempShaman.spiritHexIDs.push(hex.id)\r\n          tempShaman.selectableSpiritHexes = this.buildSelectableHexes(tempShaman.spirit.hex, tempShaman.spiritHexes)\r\n\r\n          this.updateStateShaman(tempShaman)\r\n          this.updateStorageShaman(tempShaman)\r\n        }\r\n      }\r\n\r\n      setWandHex = (hex) => {\r\n        let tempShaman = this.state.currentShaman\r\n\r\n        if (this.checkWandHexLevel(tempShaman)) {\r\n          tempShaman.wandHexes.push(hex)\r\n          tempShaman.wandHexIDs.push(hex.id)\r\n          tempShaman.selectableWandHexes = this.buildSelectableHexes(tempShaman.wandSpirit.hex, tempShaman.wandHexes)\r\n\r\n          this.updateStateShaman(tempShaman)\r\n          this.updateStorageShaman(tempShaman)\r\n        }\r\n      }\r\n\r\n      // -------------------- REMOVE HEX ----------------------- //\r\n\r\n      removeIDFromList = (idToRemove, list) => {\r\n        return list.filter(item => {\r\n          return item.id != idToRemove\r\n        }) \r\n      }\r\n\r\n      removeBaseHex = (hex) => {\r\n        let tempShaman = this.state.currentShaman\r\n\r\n        tempShaman.baseHexIDs = this.removeIDFromList(hex.id, tempShaman.baseHexIDs)\r\n        tempShaman.baseHexes = this.buildCurrentHexes(HexData, tempShaman.baseHexIDs)\r\n        tempShaman.selectableBaseHexes = this.buildSelectableHexes(HexData, tempShaman.baseHexes)\r\n\r\n        this.updateStateShaman(tempShaman)\r\n        this.updateStorageShaman(tempShaman)\r\n      }\r\n\r\n      removeSpiritHex = (hex) => {\r\n        let tempShaman = this.state.currentShaman\r\n\r\n        tempShaman.spiritHexIDs = this.removeIDFromList(hex.id, tempShaman.spiritHexIDs)\r\n        tempShaman.spiritHexes = this.buildCurrentHexes(tempShaman.spirit.hex, tempShaman.spiritHexIDs)\r\n        tempShaman.selectableSpiritHexes = this.buildSelectableHexes(tempShaman.spirit.hex, tempShaman.spiritHexes)\r\n\r\n        this.updateStateShaman(tempShaman)\r\n        this.updateStorageShaman(tempShaman)\r\n      }\r\n\r\n      removeWandHex = (hex) => {\r\n        let tempShaman = this.state.currentShaman\r\n        \r\n        tempShaman.wandHexIDs = this.removeIDFromList(hex.id, tempShaman.wandHexes)\r\n        tempShaman.wandHexes = this.buildCurrentHexes(tempShaman.wandSpirit.hex, tempShaman.wandHexIDs)\r\n        tempShaman.selectableWandHexes = this.buildSelectableHexes(tempShaman.wandSpirit.hex, tempShaman.wandHexes)\r\n        \r\n        this.updateStateShaman(tempShaman)\r\n        this.updateStorageShaman(tempShaman)\r\n      }\r\n\r\n      // -------------------- ADD SPELL ----------------------- //\r\n\r\n      spellCapCheck = (shaman, level) => {\r\n        console.log('Spell check')\r\n        console.log(shaman.spellsPerDay)\r\n        console.log(shaman.spells)\r\n        if (!shaman.spells[level] || shaman.spellsPerDay[level] > shaman.spells[level].length) {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n\r\n      addSpell = (spell, level) => {\r\n        let tempShaman = this.state.currentShaman\r\n\r\n        if (this.spellCapCheck(tempShaman, level)) {\r\n          tempShaman.spells[level].push(spell)\r\n          tempShaman.spellIDs[level].push(spell.lvlId)\r\n\r\n          this.updateStateShaman(tempShaman)\r\n          this.updateStorageShaman(tempShaman)\r\n        }\r\n      }\r\n\r\n      removeSpell = (spell, level) => {\r\n        let tempShaman = this.state.currentShaman\r\n\r\n        tempShaman.spells[level] = tempShaman.spells[level].filter(oldSpell => {\r\n          return oldSpell.id != spell.id\r\n        })\r\n        tempShaman.spellIDs[level] = tempShaman.spellIDs[level].filter(oldSpellID => {\r\n          return oldSpellID != spell.id\r\n        })\r\n\r\n        this.updateStateShaman(tempShaman)\r\n        this.updateStorageShaman(tempShaman)\r\n      }\r\n\r\n    render () {\r\n        return (\r\n            <div className='container'>\r\n\r\n                < Router >\r\n                    <div>\r\n                      <ul className='navbar site-nav'>\r\n                        <Link to='/'><li>Home</li></Link>\r\n                        <Link to='/new'><li>New</li></Link>\r\n                        <Link to='/rules'><li>Rules</li></Link>\r\n                      </ul>\r\n                    </div>\r\n\r\n                    < Route exact path='/' render={()=>{\r\n                     return (< LandingPage\r\n                        shamans={this.state.shamans}\r\n                        loadShaman={this.loadShaman}\r\n                        deleteShaman={this.deleteShaman}\r\n                     />\r\n                     )}} />\r\n\r\n                    < Route exact path='/new' render={(props)=>{\r\n                        return (\r\n                          < NewShaman \r\n                            shaman={this.state.currentShaman}\r\n                            updateStateShaman={this.updateStateShaman}\r\n                            updateStorageShaman={this.updateStorageShaman}\r\n                          />\r\n                        )\r\n                      }} />\r\n                      \r\n                    < Route exact path='/edit' render={(props)=>{\r\n                        return (\r\n                          < NewShaman \r\n                          shaman={this.state.currentShaman}\r\n                          updateStateShaman={this.updateStateShaman}\r\n                          updateStorageShaman={this.updateStorageShaman}\r\n                          />\r\n                        )\r\n                      }} />\r\n\r\n                      < Route exact path='/rules' render={(props)=>{\r\n                        return (\r\n                          < Rules />\r\n                        )\r\n                      }} />\r\n\r\n                    < Route exact path='/shaman' render={(props)=> { \r\n                        return (\r\n                          < Shaman\r\n                            data={data}\r\n                            SpellData={ShamanSpellData}\r\n                            shaman={this.state.currentShaman}\r\n                            \r\n                            setSpirit={this.setSpirit}\r\n                            setWandSpirit={this.setWandSpirit}\r\n\r\n                            setBaseHex={this.setBaseHex}\r\n                            setSpiritHex={this.setSpiritHex}\r\n                            setWandHex={this.setWandHex}\r\n\r\n                            removeBaseHex={this.removeBaseHex}\r\n                            removeSpiritHex={this.removeSpiritHex}\r\n                            removeWandHex={this.removeWandHex}\r\n\r\n                            addSpell={this.addSpell}\r\n                            removeSpell={this.removeSpell}\r\n                          />\r\n                        )\r\n                    }} />\r\n                </ Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\Shaman.js",["199","200","201","202","203","204","205","206","207"],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\BasicInfo.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\New\\NewShaman.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\reportWebVitals.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\HexSelectList.js",["208"],"import React, { Component } from 'react'\r\nimport HexDesc from '../Components/HexDesc.js'\r\nimport HexSelect from '../Components/HexSelect.js'\r\nimport Toggle from '../../Shaman/Toggle.js'\r\n\r\nclass HexList extends Component {\r\n    render () {\r\n\r\n        let list = this.props.hexes.map(hex => {\r\n            return (\r\n                <div>\r\n                    < Toggle \r\n                        title = {hex.name}\r\n                        action = {()=>{this.props.setHex(hex)}}\r\n                        expanded = {\r\n                            < HexDesc hex={hex} />\r\n                        }\r\n                    />\r\n                </div>\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <div>\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HexList","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\SpiritData.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexSelect.js",["209"],"import { CONNREFUSED } from 'dns';\r\nimport React, { Component } from 'react'\r\n\r\nclass HexSelect extends Component {\r\n    render () {\r\n        return (\r\n            <button className='button red button-full' onClick={()=>{this.props.setHex(this.props.hex)}}>{this.props.hex.name}</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HexSelect","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexDesc.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\HexData.js",["210"],"export default [\r\n    {\r\n       \"id\":0,\r\n       \"name\":\"Chant\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"A shaman can chant as a move action. Any creature that is within 30 feet that is under the effects of the shaman’s charm, evil eye, fortune, fury, or misfortune hex has that effect’s duration extended by 1 round. A shaman cannot select both this hex and the witch’s cackle hex.\"\r\n    },\r\n    {\r\n       \"id\":1,\r\n       \"name\":\"Charm\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"A shaman charms an animal or humanoid creature within 30 feet by beckoning and speaking soothing words. This improves the attitude of an animal or humanoid creature by 1 step, as if the shaman had successfully used the Diplomacy skill. The effect lasts for a number of rounds equal to the shaman’s Wisdom modifier (minimum 1). A successful Will saving throw negates this effect. Whether or not the save is successful, the creature cannot be the target of this hex again for 24 hours. At 8th level, this effect improves the attitude of the creature by 2 steps. This is a mind-affecting charm effect.\"\r\n    },\r\n    {\r\n       \"id\":2,\r\n       \"name\":\"Draconic Resilience\",\r\n       \"type\":\"Ex\",\r\n       \"desc\":\"The shaman grants a creature she touches some of the magically resilient nature of dragons, causing the creature to be immune to magical sleep effects for a number of rounds equal to the shaman’s level. At 7th level, the creature is also immune to paralysis for this duration. Once a creature has benefited from the draconic resilience hex, it cannot benefit from this hex again for 24 hours.\"\r\n    },\r\n    {\r\n       \"id\":3,\r\n       \"name\":\"Evil Eye\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"The shaman causes doubt to creep into the mind of a foe within 30 feet that she can see. The target takes a –2 penalty on one of the following (shaman’s choice): ability checks, AC, attack rolls, saving throws, or skill checks. This hex lasts a number of rounds equal to 3 + the shaman’s Wisdom modifier. A successful Will saving throw reduces this to just 1 round. At 8th level, the penalty increases to –4. This is a mind-affecting effect.\"\r\n    },\r\n    {\r\n       \"id\":4,\r\n       \"name\":\"Fetish\",\r\n       \"type\":\"Ex\",\r\n       \"desc\":\"The shaman receives Craft Wondrous Item as a bonus feat and gains a +4 insight bonus on Spellcraft checks to identify magic items permanently.\"\r\n    },\r\n    {\r\n       \"id\":5,\r\n       \"name\":\"Fortune\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"The shaman grants a creature within 30 feet a bit of good luck for 1 round. The target can call upon this good luck once per round, allowing it to reroll any ability check, attack roll, saving throw, or skill check, taking the better result. The target creature must to decide to use this ability before the first roll is made. At 8th and 16th levels, the duration of this hex increases by 1 round. Once a creature has benefited from the fortune hex, it cannot benefit from it again for 24 hours.\"\r\n    },\r\n    {\r\n       \"id\":6,\r\n       \"name\":\"Fury\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"A shaman incites a creature within 30 feet into a primal fury. The target receives a +2 morale bonus on attack rolls and a +2 resistance bonus on saving throws against fear for a number of rounds equal to the shaman’s Wisdom modifier. At 8th and 16th levels, these bonuses increase by 1. Once a creature has benefited from the fury hex, it cannot benefit from it again for 24 hours.\"\r\n    },\r\n    {\r\n       \"id\":7,\r\n       \"name\":\"Healing\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"A shaman soothes the wounds of those she touches. This acts as cure light wounds, using the shaman’s caster level. Once a creature has benefited from the healing hex, it cannot benefit from it again for 24 hours. At 5th level, this acts as cure moderate wounds.\"\r\n    },\r\n    {\r\n       \"id\":8,\r\n       \"name\":\"Intimidating Display\",\r\n       \"type\":\"Ex\",\r\n       \"desc\":\"The shaman can call upon some of the majesty and power of dragons to cow her enemies. The shaman gains Dazzling Display as a bonus feat, even if she does not meet the prerequisites, and she can use it even when not wielding a weapon.\"\r\n    },\r\n    {\r\n       \"id\":9,\r\n       \"name\":\"Misfortune\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"The shaman causes a creature within 30 feet to suffer grave misfortune for 1 round. Anytime the creature makes an ability check, attack roll, saving throw, or skill check, it must roll twice and take the worse result. A successful Will saving throw negates this hex. At 8th level and 16th level, the duration of this hex is extended by 1 round. This hex affects all rolls the target must make while it lasts. Whether or not the save is successful, the creature cannot be the target of this hex again for 24 hours.\"\r\n    },\r\n    {\r\n       \"id\":10,\r\n       \"name\":\"Secret\",\r\n       \"type\":\"Ex\",\r\n       \"desc\":\"The shaman receives one metamagic feat as a bonus feat. The shaman must meet the prerequisites for the feat.\"\r\n    },\r\n    {\r\n       \"id\":11,\r\n       \"name\":\"Shapeshift\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"The shaman transforms herself into another form for a number of minutes per day equal to her level, as alter self. This duration does not need to be consecutive, but must be spent in 1-minute increments. Changing form (including changing back) is a standard action that doesn’t provoke an attack of opportunity. At 8th level, this ability works as beast shape I. At 12th level, this ability works as beast shape II. At 16th level, this ability works as beast shape III. At 20th level, this ability works as beast shape IV.\"\r\n    },\r\n    {\r\n       \"id\":12,\r\n       \"name\":\"Silkstring Snare\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"The shaman causes ribbons of spider silk to erupt from the ground beneath a single creature. The target must succeed at a Reflex save or be entangled and anchored in place. The foe can escape the silk as a standard action with a successful Escape Artist or Strength check at the same DC, or by dealing an amount of damage to the silk equal to double the shaman’s class level (the silk has hardness 0). This hex lasts a number of rounds equal to 3 + the shaman’s Wisdom modifier. A creature affected by this hex cannot be affected by it again for 24 hours.\"\r\n    },\r\n    {\r\n       \"id\":13,\r\n       \"name\":\"Tongues\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"The shaman understands any spoken language for a number of minutes per day equal to her level, as comprehend languages. This duration does not need to be consecutive, but it must be spent in 1-minute increments. At 5th level, a shaman can use this ability to speak any language, as tongues.\"\r\n    },\r\n    {\r\n       \"id\":14,\r\n       \"name\":\"Ward\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"The shaman places a protective ward over one creature. The warded creature receives a +2 deflection bonus to AC and a +2 resistance bonus on saving throws. This effect lasts until the warded creature is hit or fails a saving throw. A shaman knows when a warded creature is no longer protected. A shaman can have only one ward active at a time. If the shaman uses this hex while a previous ward is still active, that previous ward immediately ends. A shaman cannot use this ability on herself. At 8th and 16th levels, the bonuses provided by this ward increase by 1.\"\r\n    },\r\n    {\r\n       \"id\":15,\r\n       \"name\":\"Wings\",\r\n       \"type\":\"Su\",\r\n       \"desc\":\"The shaman can grow a pair of wings for a number of minutes per day equal to her level. These minutes do not need to be consecutive, but they must be spent in 1-minute increments. Initially, these wings lack the power to allow the shaman to fly, but the shaman can use them as a secondary natural attack that deals 1d3 points of damage (1d2 for a Small shaman). At 3rd level, she can use the wings to safely descend any distance, as if using the feather fall spell. At 7th level, she can use the wings to fly with poor maneuverability and a fly speed of 30 feet, but the shaman must land at the end of each turn or fall. A shaman of 8th level or higher can select the wings hex a second time. This doubles the number of minutes per day the shaman can use her wings (2 minutes per level), and allows her to fly with average maneuverability and a fly speed of 30 feet while the wings are active.\"\r\n    },\r\n    {\r\n       \"id\":16,\r\n       \"name\":\"Witch Hex\",\r\n       \"desc\":\"The shaman selects any one hex normally available through the witch’s hex class feature. She treats her shaman level as her witch level when determining the powers and abilities of the hex. She uses her Wisdom modifier in place of her Intelligence modifier for the hex. She cannot select major hexes or grand hexes using this ability. The shaman cannot select a witch hex that has the same name as a shaman hex.\"\r\n    }\r\n ]","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\HexDisplayList.js",["211"],"import React, { Component } from 'react'\r\nimport HexDesc from '../Components/HexDesc.js'\r\nimport HexSelect from '../Components/HexSelect.js'\r\nimport Toggle from '../../Shaman/Toggle.js'\r\n\r\nclass HexList extends Component {\r\n    render () {\r\n\r\n        let list = this.props.hexes.map(hex => {\r\n            return (\r\n                <div>\r\n                    \r\n                    < Toggle \r\n                        expanded = {\r\n                            < HexDesc hex={hex} />\r\n                        }\r\n                        collapsed = {\r\n                            <button className='button red button-full'>{hex.name}</button>\r\n                        }\r\n                    />\r\n                </div>\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <div>\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HexList","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\SlimHexSelectList.js",["212"],"import React, { Component } from 'react'\r\nimport HexName from '../Components/HexName.js'\r\nimport HexSelect from '../Components/HexSelect.js'\r\n\r\nclass SlimHexList extends Component {\r\n    render () {\r\n\r\n        let list = this.props.hexes.map(hex => {\r\n            return (\r\n                <span>\r\n                    < HexSelect hex={hex} setHex={this.props.setHex} />\r\n                </span>\r\n            )\r\n        })\r\n        \r\n        return (\r\n            <div>\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SlimHexList","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Components\\HexName.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Hexes\\Lists\\SlimHexDisplayList.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\LandingPage\\LandingPage.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\LandingPage\\Load\\ShamanList.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\InfoExpand.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Types\\FullSpell.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Lists\\SpellsFull.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Components\\SpellEffects.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Components\\SpellName.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Components\\SpellTrait.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\ShamanSpells.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\SpellSection.js",["213"],"import React, { Component } from 'react'\r\nimport SpellsFull from './Lists/SpellsFull.js'\r\n\r\nclass SpellSection extends Component {\r\n\r\n    state = {\r\n        currentTab: 0,\r\n        currentSpells: [],\r\n        allSpells: [],\r\n        search: ''\r\n    }\r\n\r\n    switchTab = (i) => {\r\n        if (i === 10) {\r\n            this.setState({\r\n                currentTab: i,\r\n                allSpells: this.props.spells.flat(),\r\n                currentSpells: this.props.spells.flat()\r\n            })\r\n        } else {\r\n            this.setState({\r\n                currentTab: i,\r\n                allSpells: this.props.spells[i],\r\n                currentSpells: this.props.spells[i]\r\n            })\r\n        }\r\n    }\r\n\r\n    updateSearch = (e) => {\r\n        let tempSpells = this.state.allSpells\r\n        let search = e.target.value\r\n\r\n        tempSpells = tempSpells.filter(spell => {\r\n            return spell.description.includes(search) || spell.name.includes(search)\r\n        })\r\n\r\n        this.setState({ currentSpells: [...tempSpells], search })\r\n    }\r\n\r\n    render () {\r\n\r\n        let navtabs = []\r\n        let display = []\r\n        for (let i = 0; i < Math.ceil(this.props.shaman.lvl / 2) && i <= 9; i++) {\r\n            navtabs.push(\r\n                <>\r\n                    <span onClick={()=>{this.switchTab(i)}}>{i}</span>{' | '}\r\n                </>\r\n            )\r\n        }\r\n\r\n        navtabs.push(\r\n            <>\r\n                <span onClick={()=>{this.switchTab(10)}}>All</span>\r\n            </>\r\n        )\r\n\r\n        return (\r\n        <div>\r\n            <div>\r\n                {navtabs}\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Search</h3>\r\n                < input className='full' onChange={(e)=>{this.updateSearch(e)}} type='text' />\r\n            </div>\r\n\r\n            <h3>Spells\r\n                <span> ({this.state.currentTab < 10 ? 'Level ' + this.state.currentTab : 'All'})</span>\r\n            </h3>\r\n            < SpellsFull spells={this.state.currentSpells} addSpell={this.props.addSpell} />\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SpellSection","C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Data\\ShamanSpellIDs.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Lists\\SpellsSlim.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Types\\SlimSpell.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\New\\Components\\Stat.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Rules.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\Section.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\TItle.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\Subtitle.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\Subsection.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Rules\\Components\\Contents.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spells\\Types\\Toggle.js",[],["214","215"],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\Toggle.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\Spirit.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Lists\\SlimSpiritList.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\SpiritAbilities.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\SpiritMagic.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\Ability.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Components\\SpiritSelect.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Spirit\\Lists\\FullSpiritList.js",[],"C:\\Users\\Elyssa\\general_assembly\\extra\\react-shaman\\src\\Shaman\\Tab.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":8,"column":28,"nodeType":"222","messageId":"223","endLine":8,"endColumn":37},{"ruleId":"220","severity":1,"message":"224","line":14,"column":7,"nodeType":"222","messageId":"223","endLine":14,"endColumn":19},{"ruleId":"225","severity":1,"message":"226","line":81,"column":32,"nodeType":"227","messageId":"228","endLine":81,"endColumn":34},{"ruleId":"229","severity":1,"message":"230","line":344,"column":26,"nodeType":"231","messageId":"232","endLine":344,"endColumn":28},{"ruleId":"229","severity":1,"message":"230","line":410,"column":30,"nodeType":"231","messageId":"232","endLine":410,"endColumn":32},{"ruleId":"229","severity":1,"message":"230","line":413,"column":29,"nodeType":"231","messageId":"232","endLine":413,"endColumn":31},{"ruleId":"220","severity":1,"message":"233","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":14},{"ruleId":"220","severity":1,"message":"234","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"235","line":4,"column":8,"nodeType":"222","messageId":"223","endLine":4,"endColumn":17},{"ruleId":"220","severity":1,"message":"236","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":18},{"ruleId":"220","severity":1,"message":"237","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":22},{"ruleId":"220","severity":1,"message":"238","line":9,"column":8,"nodeType":"222","messageId":"223","endLine":9,"endColumn":25},{"ruleId":"220","severity":1,"message":"239","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":26},{"ruleId":"220","severity":1,"message":"240","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":18},{"ruleId":"220","severity":1,"message":"241","line":14,"column":8,"nodeType":"222","messageId":"223","endLine":14,"endColumn":14},{"ruleId":"220","severity":1,"message":"242","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":17},{"ruleId":"220","severity":1,"message":"243","line":1,"column":10,"nodeType":"222","messageId":"223","endLine":1,"endColumn":21},{"ruleId":"244","severity":1,"message":"245","line":1,"column":1,"nodeType":"246","endLine":103,"endColumn":3},{"ruleId":"220","severity":1,"message":"242","line":3,"column":8,"nodeType":"222","messageId":"223","endLine":3,"endColumn":17},{"ruleId":"220","severity":1,"message":"247","line":2,"column":8,"nodeType":"222","messageId":"223","endLine":2,"endColumn":15},{"ruleId":"220","severity":1,"message":"248","line":43,"column":13,"nodeType":"222","messageId":"223","endLine":43,"endColumn":20},{"ruleId":"216","replacedBy":"249"},{"ruleId":"218","replacedBy":"250"},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'AllSpellData' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","'Spirit' is defined but never used.","'BasicInfo' is defined but never used.","'SpiritList' is defined but never used.","'HexDisplayList' is defined but never used.","'SlimHexSelectList' is defined but never used.","'SlimHexDisplayList' is defined but never used.","'SpellsFull' is defined but never used.","'Toggle' is defined but never used.","'HexSelect' is defined but never used.","'CONNREFUSED' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'HexName' is defined but never used.","'display' is assigned a value but never used.",["251"],["252"],"no-global-assign","no-unsafe-negation"]